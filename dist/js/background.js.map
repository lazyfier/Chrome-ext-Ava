{"version":3,"file":"js/background.js","mappings":"yBAEA,MAAMA,EAAmBC,GACvB,IAAIC,SAAQC,GACVF,EAAIG,eAAeC,aAAYC,IAC7BJ,QAAQK,IACJD,EACCE,QAAOC,GAAmB,MAAdA,EAAEC,KAAK,KACnBC,KAAIF,GACHA,EAAEG,YAAcZ,EAAiBS,GAAK,IAAIP,SAAQC,GAAWM,EAAEI,KAAKV,QAGvEW,MAAKC,GAAS,GAAGC,UAAUD,KAC3BD,KAAKX,QAKRc,EAA+BhB,GACnCD,EAAiBC,GAAKa,MAAKC,GACzBA,EAAMJ,KAAIO,GAAKA,EAAER,KAAOQ,EAAEC,mBAAkBC,SAI1CC,EAAS,KACbC,OAAOC,OAAOC,KAAKC,MAAM,CACrBC,QAAQ,EACRC,eAAe,IAEjBH,IAEMA,EAAK,IACPF,OAAOC,OAAOC,KAAKH,OAAOG,EAAK,GAAGI,IAGpCN,OAAOC,OAAOM,QAAQR,aAMtBS,EAAe,CAAC7B,EAAK8B,KACzBd,EAA6BhB,GAAKa,MAAKkB,IAEhCD,GAAiBA,IAAkBC,EAItCX,IAHAY,YAAW,IAAMH,EAAa7B,EAAK+B,IAAY,SAQ/CE,EAAY,KAChBZ,OAAOC,OAAOY,WAAWC,SAAQC,IACN,gBAArBA,EAAKC,aAEPhB,OAAOC,OAAOM,QAAQU,0BAAyBtC,GAAO6B,EAAa7B,SAKzE,QC7DAiC,IAEAM,QAAQC,IAAI,2B","sources":["webpack://test/./src/js/hotReload.js","webpack://test/./src/js/background.js"],"sourcesContent":["// 加载文件\n\nconst filesInDirectory = dir =>\n  new Promise(resolve =>\n    dir.createReader().readEntries(entries => {\n      Promise.all(\n          entries\n          .filter(e => e.name[0] !== '.')\n          .map(e =>\n            e.isDirectory ? filesInDirectory(e) : new Promise(resolve => e.file(resolve))\n          )\n        )\n        .then(files => [].concat(...files))\n        .then(resolve);\n    })\n  );\n\n// 遍历插件目录，读取文件信息，组合文件名称和修改时间成数据\nconst timestampForFilesInDirectory = dir =>\n  filesInDirectory(dir).then(files =>\n    files.map(f => f.name + f.lastModifiedDate).join()\n  );\n\n// 刷新当前活动页\nconst reload = () => {\n  window.chrome.tabs.query({\n      active: true,\n      currentWindow: true\n    },\n    tabs => {\n      // NB: see https://github.com/xpl/crx-hotreload/issues/5\n      if (tabs[0]) {\n        window.chrome.tabs.reload(tabs[0].id);\n      }\n      // 强制刷新页面\n      window.chrome.runtime.reload();\n    }\n  );\n};\n\n// 观察文件改动\nconst watchChanges = (dir, lastTimestamp) => {\n  timestampForFilesInDirectory(dir).then(timestamp => {\n    // 文件没有改动则循环监听watchChanges方法\n    if (!lastTimestamp || lastTimestamp === timestamp) {\n      setTimeout(() => watchChanges(dir, timestamp), 1000); // retry after 1s\n    } else {\n      // 强制刷新页面\n      reload();\n    }\n  });\n};\n\nconst hotReload = () => {\n  window.chrome.management.getSelf(self => {\n    if (self.installType === 'development') {\n      // 获取插件目录，监听文件变化\n      window.chrome.runtime.getPackageDirectoryEntry(dir => watchChanges(dir));\n    }\n  });\n};\n\nexport default hotReload;","import hotReload from '@/js/hotReload'\nhotReload()\n\nconsole.log('hello world background')"],"names":["filesInDirectory","dir","Promise","resolve","createReader","readEntries","entries","all","filter","e","name","map","isDirectory","file","then","files","concat","timestampForFilesInDirectory","f","lastModifiedDate","join","reload","window","chrome","tabs","query","active","currentWindow","id","runtime","watchChanges","lastTimestamp","timestamp","setTimeout","hotReload","management","getSelf","self","installType","getPackageDirectoryEntry","console","log"],"sourceRoot":""}